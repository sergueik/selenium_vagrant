write-output 'started'
$name = 'install spoon plugin'
& schtasks /Delete /F /TN $name
& schtasks /Create /TN $name /XML "C:\temp\install_spool_plugin.xml"
& schtasks /Run /TN $name
write-output 'Waiting for status of the task'
start-sleep -second 1

while($true){
   $status = schtasks /query /TN $name| select-string -pattern "${name}"
write-output $status

if ($status.tostring() -match '(Running|Ready)'){
  write-host "${name} is running..."
  break 
}else { 
  write-host "${name} is not yet running..."
}
  start-sleep -milliseconds 1000
}

while($true){
  $status = schtasks /query /TN $name|select-string  -pattern "${name}"
if ($status.tostring() -match 'Ready'){
  write-host "${name} is ready."
  break 
}else { 
  write-host "${name} is not yet ready."
}
  start-sleep -milliseconds 1000
}
# ======================================== ====================== ===============


# & schtasks /Delete /F /TN $name

-- 
write-output 'started'
$name = 'install spoon plugin'
& schtasks /Delete /F /TN $name
& schtasks /Create /TN $name /XML "C:\temp\install_spool_plugin.xml"
& schtasks /Run /TN $name
write-output 'Waiting for status of the task'
start-sleep -second 10

while($true){
   $status = schtasks /query /TN $name| select-string -patt "${name}"
write-output $status

if ($status.tostring().substring(62,7) -eq "Running"){
write-host "${name} is running..."
break 

}else { 
write-host "${name} is not yet running..."
}
  start-sleep -milliseconds 1000
}

while($true){
   $status = schtasks /query /TN $name|select-string -patt "${name}"
if ($status.tostring().substring(62,7) -eq "Ready"){
write-host "${name} is running..."
}else { 
break 
}
  start-sleep -milliseconds 1000
}
# ======================================== ====================== ===============


# & schtasks /Delete /F /TN $name


---

write-output 'started'
$name = 'install spoon plugin'
& schtasks /Delete /F /TN $name
& schtasks /Create /TN $name /XML "C:\temp\install_spool_plugin.xml"
& schtasks /Run /TN $name
write-output 'Waiting for status of the task'
start-sleep -second 10

while($true){
   $status = schtasks /query /TN $name| select-string -patt "${name}"
write-output $status

if ($status.tostring() -match "Running"){
write-host "${name} is running..."
break 

}else { 
write-host "${name} is not yet running..."
}
  start-sleep -milliseconds 1000
}

while($true){
   $status = schtasks /query /TN $name|select-string -patt "${name}"
if ($status.tostring() -match "Ready"){
write-host "${name} is running..."
}else { 
break 
}
  start-sleep -milliseconds 1000
}
# ======================================== ====================== ===============


# & schtasks /Delete /F /TN $name

