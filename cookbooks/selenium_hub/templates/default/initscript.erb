#!/bin/sh
# set -x
set -e

SELENIUM_USER='<%= @user_name -%>'
SELENIUM_HOME='<%= @selenium_home -%>'
SERVICE_NAME='selenium'
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DEFAULTS="/etc/default/${SERVICE_NAME}"
INITSCRIPT="$(basename "$0")"
JOB="${INITSCRIPT%.sh}"
PIDFILE='/var/run/hub.pid'
LOGFILE_DIR='var/log'
PIDFILE_DIR='/var/run'
COMMAND="$1"
export JVM_ARGS="-XX:MaxPermSize=256M -Xmn128M -Xms256M -Xmx256M"
export HUB_PORT=<%= @hub_port %>
export JAR_FILENAME='<%= @jar_filename -%>'
export SELENIUM_JAR_VERSION=2.44.0 # currently unused
export ROLE=hub

# TODO: process when JAVA_HOME not set 

export JAVA_HOME='/usr/bin'
SELENIUM_ARGS=`cat<<END_ARGS
-classpath ${SELENIUM_HOME}/log4j-1.2.17.jar:${SELENIUM_HOME}/${JAR_FILENAME} \
-Dlog4j.configuration=file://${SELENIUM_HOME}/<%= @log_conf -%> \
org.openqa.grid.selenium.GridLauncher \
-role ${ROLE} -port ${HUB_PORT}
END_ARGS
`

export SELENIUM_ARGS
[ -r "$DEFAULTS" ] && . "$DEFAULTS"
. /lib/init/vars.sh
. /lib/lsb/init-functions

DAEMON_CMD="/usr/bin/java -- $JVM_ARGS ${SELENIUM_ARGS}"
DAEMON_ARGS="--chdir ${SELENIUM_HOME} --quiet --pidfile ${PIDFILE} --user ${SELENIUM_USER}"

start() {

    logger "Starting Selenium Grid in ${SERVICE_ROLE} mode..."

    mkdir -p "$LOGFILE_DIR" "$PIDFILE_DIR"
    chown -R $SELENIUM_USER "$LOGFILE_DIR" "$PIDFILE_DIR"

    start-stop-daemon $DAEMON_ARGS --start --background --make-pidfile --chuid $SELENIUM_USER --exec $DAEMON_CMD
    RETVAL="$?"

    return "$RETVAL"
}

stop() {
    logger "Stopping Selenium Grid instance..."
    start-stop-daemon $DAEMON_ARGS --stop --retry=TERM/30/KILL/5
    RETVAL="$?"
    rm -f $PIDFILE
    return "$RETVAL"
}

status() {
    if [ -e $PIDFILE ]; then
        status_of_proc -p $PIDFILE $DAEMON "$SERVICE_NAME process" && exit 0 || exit $?
    else
        log_daemon_msg "$SERVICE_NAME: Process is not running."
        log_end_msg 0
        exit 4
    fi
}

case $COMMAND in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop && start
        ;;
    status)
        status
        ;;
    *)
        echo "Usage: service $JOB (start|stop|restart|status)" >&2
        exit 1
esac

exit $RETVAL

