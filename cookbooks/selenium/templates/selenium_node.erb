#!/bin/sh


# set -x
set -e

SELENIUM_USER='root'
SELENIUM_HOME='/root/selenium'
SERVICE_NAME='selenium'
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DEFAULTS="/etc/default/${SERVICE_NAME}"
INITSCRIPT="$(basename "$0")"
JOB="${INITSCRIPT%.sh}"

export NODE_PORT=<%= @node_port %>
export HUB_IP_ADDRESS=<%= @hub_ip %>
export HUB_PORT=<%= @hub_port %>
export NODE_CONFIG="${SELENIUM_HOME}/node.json"
export DISPLAY_PORT=<%= @display_port %>
export JVM_ARGS='-Xmn128M -Xms256M -Xmx256M'
export SELENIUM_JAR_VERSION=2.44.0 # currently unused
export ROLE=node

PIDFILE="/var/run/${ROLE}.pid"
LOGFILE_DIR='var/log'
PIDFILE_DIR='/var/run'
COMMAND="$1"

# TODO: process when JAVA_HOME not ser
export JAVA_HOME='/usr/bin'
SELENIUM_ARGS=`cat<<END_ARGS
-role $ROLE \
-port $NODE_PORT \
-hub http://${HUB_IP_ADDRESS}:${HUB_PORT}/hub/register \
-nodeConfig $NODE_CONFIG  \
-browserTimeout 12000 -timeout 12000 \
-ensureCleanSession true \
-trustAllSSLCertificates
END_ARGS
`
export SELENIUM_ARGS
[ -r "$DEFAULTS" ] && . "$DEFAULTS"
. /lib/init/vars.sh
. /lib/lsb/init-functions
DAEMON_ARGS="--name $ROLE --quiet --pidfile $PIDFILE --user $SELENIUM_USER"
DAEMON_CMD="/usr/bin/java -- $JVM_ARGS -jar ${SELENIUM_HOME}/selenium.jar ${SELENIUM_ARGS}"
if [ "$DEBUG" != "" ]  
then
  echo $DAEMON_CMD
fi

start() {
    logger "Starting Selenium Grid in ${SERVICE_ROLE} mode..."

    mkdir -p "$LOGFILE_DIR" "$PIDFILE_DIR"
    chown -R $SELENIUM_USER "$LOGFILE_DIR" "$PIDFILE_DIR"

    export DISPLAY=:$DISPLAY_PORT

    start-stop-daemon $DAEMON_ARGS --start --background --make-pidfile --chuid $SELENIUM_USER --exec $DAEMON_CMD
    RETVAL="$?"

    return "$RETVAL"
}

stop() {
    logger "Stopping Selenium Grid instance..."

    start-stop-daemon $DAEMON_ARGS --stop --retry=TERM/30/KILL/5
    RETVAL="$?"

    rm -f $PIDFILE

    return "$RETVAL"
}

status() {
    if [ -e $PIDFILE ]; then
        status_of_proc -p $PIDFILE $DAEMON "$SERVICE_NAME process" && exit 0 || exit $?
    else
        log_daemon_msg "$SERVICE_NAME: Process is not running."
        log_end_msg 0
    fi
}

case $COMMAND in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop && start
        ;;
    status)
        status
        ;;
    *)
        echo "Usage: service $JOB (start|stop|restart|status)" >&2
        exit 1
esac

exit $RETVAL
